<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration  
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!-- 元素首次出现必须符合下面的顺序 -->  
    <!-- (properties?,settings?,typeAliases?,typeHandlers?,objectFactory?,objectWrapperFactory?,reflectorFactory?,plugins?,environments?,databaseIdProvider?,mappers?) -->  
   
    <!-- 加载常量配置信息 -->  
    <!-- 可以覆盖重写，用于解密-http://www.mybatis.org/mybatis-3/zh/configuration.html  
        ·在 properties 元素体内指定的属性首先被读取。  
        ·然后根据 properties 元素中的 resource 属性读取类路径下属性文件或根据 url 属性指定的路径读取属性文件，并覆盖已读取的同名属性。  
        ·最后读取作为方法参数传递的属性，并覆盖已读取的同名属性。 -->
      
    <!-- 用来指定Mybatis所用日志的具体实现，未指定时默认会自己寻找
    	SLF4J | LOG4J | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | STDOUT_LOGGING | NO_LOGGING
     -->
    <settings>
        <!-- 打印查询语句 -->
        <setting name="logImpl" value="LOG4J" />
    </settings>
      
    <!-- 为实体类定义别名 -->
    <typeAliases>
    	<!-- 主要为mapper内部指定的class类起别名 
    		<typeAlias alias="userModel"  type="com.bestcxx.stu.springmvc.model.UserModel"/>
    	-->
    	<typeAlias alias="userModel"  type="cn.yarne.com.base.model.Users"/>
        <typeAlias alias="sysUserModel"  type="cn.yarne.com.base.model.SysUser"/>
    </typeAliases>
    <!-- 配置分页插件 -->
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageHelper">
            <!-- 设置数据库类型 Oracle,Mysql,MariaDB,SQLite,Hsqldb,PostgreSQL六种数据库 -->
            <property name="dialect" value="mysql" />
            <!-- 该参数默认为false -->
            <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
            <!-- 和startPage中的pageNum效果一样 -->
            <property name="offsetAsPageNum" value="true" />
            <!-- 该参数默认为false -->
            <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
            <property name="rowBoundsWithCount" value="true" />
            <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
            <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型） -->
            <property name="pageSizeZero" value="true" />
            <!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
            <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
            <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
            <property name="reasonable" value="false" />
            <!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 -->
            <!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->
            <!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,不配置映射的用默认值 -->
            <!-- 不理解该含义的前提下，不要随便复制该配置 -->
            <property name="params" value="pageNum=start;pageSize=limit;" />
        </plugin>
    </plugins>
    <!-- 定义映射器 -->  
    <mappers>  
        <!-- 使用这个方案，可以单独指定Mapper的位置:
          <mapper resource="mybatis/mappings/UserModelMapper.xml"/>  
          <mapper resource="mybatis/mappings/UserModelTwoMapper.xml"/>
        -->  
        <!-- 使用下面两个个方法，Mapper.xml 文件位置必须在和其内部 <mapper namespace="">的类在一起，
        	当然，使用注解模式的话，Mapper.xml文件就没有必要存在了
        -->  
        <!-- 直接指定一个包去扫描-内保包含多个Mapper配置-
          <package name="com.bestcxx.stu.springmvc.mapper"/>
        -->  
        <!-- class 级别的指定 
        	使用spring的配置方式：需要在spring的配置文件中指定:
        	<mybatis:scan base-package="edu.zju.bme.data.manage.mapper" />
        	不使用spring来配置：
          	<mapper class="com.bestcxx.stu.springmvc.mapper.UserModelMapper"/>  
          	<mapper class="com.bestcxx.stu.springmvc.mapper.UserModelTwoMapper"/> 
        -->   
    </mappers>
</configuration>