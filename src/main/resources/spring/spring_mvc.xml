<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/task   
        http://www.springframework.org/schema/task/spring-task-3.0.xsd   
        http://www.springframework.org/schema/aop  
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 配置注解扫描的类,必须配置，否则扫描不到controller里面的注解  -->
	<context:component-scan base-package="cn.yarne.com.base">
		<!-- 扫描所有的controller 但是不扫描service -->
			<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
			<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	
	
	<!-- 启动注解 -->
	<mvc:annotation-driven />
	
	<!-- 配置mvc视图解析 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<!-- 访问静态资源配置，因为在web.xml中，我配置mvc拦截的时候用的是/,所以会将所有的访问都会拦截，
	 一些静态资源会被拦截下来导致访问不到，所以需要配置 -->
	 
	<!-- 在springMVC-servlet.xml中配置<mvc:default-servlet-handler />后，
	会在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，
	它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，
	如果不是静态资源的请求，才由DispatcherServlet继续处理。 -->
	<mvc:default-servlet-handler/>
	
	<!-- 配置访问swagger-ui的静态资源路径 -->
	<mvc:resources mapping="swagger-ui.html" location="classpath:META-INF/resources/" />
	<mvc:resources mapping="webjars/**" location="classpath:META-INF/resources/webjars/"/>
</beans>